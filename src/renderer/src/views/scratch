<template>
    <div @dragenter="handleDragEnter" @dragover.prevent>
      <div class="flex flex-row justify-between items-center relative ">
        <p class="text-2xl text-slate-800 text-wrap font-medium">Scanned Documents</p>
        <div
          ref="dropzone"
          @dragleave="handleDragLeave"
          @drop="handleDrop"
          :class="{ hidden: !isDropzoneVisible }"
          class="absolute top-0 bottom-0 left-0 right-0 h-[450px] rounded-sm border-4 p-8 border-blue-500 border-dashed items-center z-[99999] bg-white cursor-grabbing transition-all"
        >
          <p class="text-4xl font-bold text-gray-400 text-center mt-36 uppercase">
            Drop PDF FIle Here
          </p>
        </div>
        <button
          @click="openModal"
          class="block text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-sm text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
          type="button"
        >
          ADD
        </button>
      </div>
  
      <div class="flex flex-col mt-10 w-auto">
        <DataTable />
      </div>
    </div>
  
  </template>
  
  
  <script>
  import axios from "axios";
  import DataTable from "../components/DataTable.vue";
  import { Modal } from "flowbite";
  
  export default {
    data() {
      return {
        members: [],
        filename: "",
        fileinfo: "",
        filesize: "",
        filePathChange: "",
        isDropzoneVisible: false,
      };
    },
    methods: {
      // getMembers() {
      //   const path = "http://127.0.0.1:5000/members";
      //   axios
      //     .get(path)
      //     .then((res) => {
      //       this.members = res.data.members[0];
      //       console.log(res);
      //     })
      //     .catch((error) => {
      //       console.error(error);
      //     });
      // },
      handleDragEnter(event) {
        event.preventDefault();
        console.log("Drag Enter");
        this.isDropzoneVisible = true;
      },
      handleDragLeave(event) {
        event.preventDefault();
        console.log("Drag Leave");
        this.isDropzoneVisible = false;
      },
      handleDrop(event) {
        event.preventDefault();
        const file = event.dataTransfer.files[0];
        if (file.type === "application/pdf") {
          this.isDropzoneVisible = false;
          const $targetModal = this.$refs.dropModal;
          const modal = new Modal($targetModal);
          modal.show();
          this.$refs.filename.focus();
          this.filename = file.name;
          this.fileinfo = file.name;
          this.filesize = (file.size / (1024 * 1024)).toFixed(2);
        } else {
          this.isDropzoneVisible = false;
          alert("PDF FILE ONLY!");
        }
      },
  
      async handleFileSelection() {
        try {
          const selectedFile = await window.LocalCivilApi.selectFile();
  
          if (selectedFile) {
            this.isDropzoneVisible = false;
            console.log(selectedFile);
            const modal = new Modal(this.$refs.dropModal);
            modal.show();
          } else {
            console.log("File selection was canceled.");
          }
        } catch (error) {
          console.error("Error during file selection:", error);
        }
      },
  
      updateFilePath() {
        switch (this.selectedOption) {
          case "birth":
            this.filePathChange =
              "\\SynologyDrive\\Joan\\SCANNED DOCUMENTS\\SCANNED BIRTH 1946-2024";
            break;
          case "death":
            this.filePathChange =
              "\\SynologyDrive\\Joan\\SCANNED DOCUMENTS\\SCANNED DEATH 1946-2023";
            break;
          case "marriage":
            this.filePathChange =
              "\\SynologyDrive\\Joan\\SCANNED DOCUMENTS\\SCANNED MARRIAGE 1946-2023";
            break;
          case "legal":
            this.filePathChange =
              "\\SynologyDrive\\Joan\\SCANNED DOCUMENTS\\SCANNED LEGAL INSTRUMENTS 1996-2024";
            break;
          case "other":
            this.filePathChange = "\\SynologyDrive\\Joan\\SCANNED DOCUMENTS";
            break;
          default:
            this.filePathChange = "";
        }
      },
      closeModal() {
        this.isDropzoneVisible = false;
        const modal = new Modal(this.$refs.dropModal);
        modal.hide();
      },
      openModal() {
        this.handleFileSelection();
      },
    },
  
    mounted() {
      // Select Folder API
      const selectFolderButton = document.getElementById("select-folder");
  
      if (selectFolderButton) {
        selectFolderButton.addEventListener("click", handleFolderSelection);
      }
  
      async function handleFolderSelection() {
        try {
          const selectedPath = await window.LocalCivilApi.selectFolder();
  
          if (selectedPath) {
            updateFolderInputValue(selectedPath);
          } else {
            console.log("Folder selection was canceled.");
          }
        } catch (error) {
          console.error("Error during folder selection:", error);
        }
      }
  
      function updateFolderInputValue(path) {
        const folderInput = document.getElementById("folder-input");
        if (folderInput) {
          folderInput.value = path;
        }
      }
    },
  
    // created() {
    //   this.getMembers();
    // },
    components: { DataTable },
  };
  </script>
  